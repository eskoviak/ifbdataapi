swagger: "2.0"
info:
  version: 2.0.0
  title: Policies
  description: |
    This is the entry point for policy inquiries.

    #### Service Functionality:
    This API is called with a policyId parameter.  If successful, the resultant resource is a
    JSON oject, based on the Policy model. 
    
    #### Performance Expectation:
    Standard SLA applies.
    
    #### Service Capacity Supported:
    Standard Capacity applies
    
    #### Suggested Test Scenario:
    TBD
    
    #### Service Availability:
    Standard Service Availability applies
    
    #### Service Security:
    HTTPS/SSL
produces:
  - application/json
schemes:
  - https
basePath: /policies
paths:
  /{policyId}:
    get:
      summary: a Policy
      parameters:
        - $ref: "#/parameters/PolicyId"
      responses:
        "200":
          description: Success
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/Client"
        "401":
          description: Unauthorized or invalid token
        "404":
          description: Entity not found
        "500":
          description: Server error                  
  /{policyId}/interests:
    get:
      summary: An array of Interest
      parameters:
        - $ref: "#/parameters/PolicyId"
      responses:
        "200":
          description: Success
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: ../models/Interest.yaml
        "401":
          description: Unauthorized or invalid token
        "404":
          description: Entity not found
        "500":
          description: Server error                  
parameters:
  PolicyId:
    name: policyId
    required: true
    in: path
    description: policyId
    type: string
definitions:
  Client:
    description: |
      A Client object represents a legal entity with a defined relationship to the insurance policy or
      annuity contract.  A the model represents either a person (i.e. the insured or the annuitant),
      an organization (i.e. a bank or assignee), or it can be Unknown (i.e. a trust, which can be either
      a person or an organization).
    properties:
      id:
        description: A unique identifier for the client
        type: string
      sourceSystemType:
        description: |
          The type of client as recorded on the source system.  Note: either #.sourceSystemType or 
          #.sourceSystemTypeCode is required.
        type:
          - 'string'
          - 'null'
      sourceSystemTypeCode:
        description: |
          The type code of client as recorded on the source system. Note: either #.sourceSystemType
          or #.sourceSystemTypeCode is required.
        type:
          - 'string'
          - 'null'
      name:
        description: |
          A display-formatted name of the individual or business for this Client.  For an organization, this is
          the legal name of the organization.  For an individual, this would be the `concatenated` name, which is
          stored on the system.  If the individual's name is to be modeled as name components, use the #.personName
          property.
        type: 
          - 'string'
          - 'null'
      personName:
        description: |
          The component parts of the Client name, when the Client represents an individual, if known.  For individuals, 
          either the #.name or #personName property should be populated.  It is expected that this property will be null
          for organizations.
        $ref: "#/definitions/PersonName"
      phoneNumbers:
        type: array
        items:
          $ref: ../definitions.yaml#/definitions/Phone
      emailAddresses:
        type: array
        items:
          $ref: ../definitions.yaml#/definitions/Email
      taxId:
        description: |
          This is a government assigned identifier.  In the US, this is either the Tax ID Number (TIN) for a business
          or the Social Security Number (SSN) for and individual.
        type:
          - 'string'
          - 'null'
      addresses:
        type: array
        items:
          $ref: ../definitions.yaml#/definitions/Address
      preferences:
        description: |
          A schemaless object key/value pairs representing Client preferences
          This is used for configuring contact preferences.
        type: object
      demographics:
        $ref: ../definitions.yaml#/definitions/Demographics
  PersonName:
    description: |
      This model contains name details for a person.  It is based on the ACORD PersonName_Type (PCS)
      and OLifE/Party/Person (LAH).
    properties:
      firstName:
        description: |
          First (or Given) name of the person.
        type:
          - 'string'
          - 'null'
      middleName:
        description: |
          All middle names.
        type:
          - 'string'
          - 'null'
      lastName:
        description: |
          Last name (surname) of the person.
        type:
          - 'string'
          - 'null'
      titlePrefix:
        description: |
          Any phrase to precede the name which is not part of the actual name,
          such as Dr. or Mrs.
        type:
          - 'string'
          - 'null'    
      nameSuffix:
        description: |
          Any phrase to succeed the name which is not par tof the actual name, 
          such as `Jr.` or `III.`
        type:
          - 'string'
          - 'null'    
  Phone:
    description: Phone model
    properties:
      phoneNumber:
        description: |
          The phone number in the ITU-T E.164.1 Format,
        type: string
        format: e.164.1
      phoneType:
        description: |
          These enumerations are sourced from Exceed Client
        enum: ['Alternate', 'Business', 'Contact', 'Emergency', 'Fax', 'Account', 'Home', 'Vacation', 'Work', 'Cell', 'Pager', 'Relative', 'Toll Free', 'Unlisted']
      phoneTypeCode:
        type: string