swagger: '2.0'
info: {version: 2.0.0, title: Policies, description: Policy Endpoints}
produces: [application/json]
schemes: [https]
basePath: /policies
paths:
  /{policyId}:
    get:
      summary: a Policy
      parameters:
      - &id0003 {name: policyId, required: true, in: path, description: policyId,
        type: string}
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  description: 'A top-level model which represents an insurance Policy
                    (of various types) or an annuity Contract (fixed

                    and variable).

                    '
                  x-acord-agg-xref: {'#1': OLife/Holding/Policy}
                  required: [id, transactionId, policyNumber, priorPolicyNumber, description,
                    policyStatus, policyStatusCode, transactionStatus, transactionStatusCode,
                    locations, policyDetails, insuranceScore, issueAge, originalInceptionDate,
                    termEffectiveDate, termExpirationDate, cancelDate, maturityDate,
                    policyTerm, premium, billingDetails, policyAssociations, supplementalDocuments]
                  properties:
                    id: {description: 'The policy ID is a globally unique id. This
                        could be a GUID or a composite of system

                        information and policy number but in the latter case MUST
                        not be used to infer

                        information about the policy.

                        ', type: string}
                    policyNumber:
                      description: The recordkeeping system Policy Number; this is
                        NOT globally unique.
                      type: [string, 'null']
                    transactionId:
                      description: 'A transaction, or session key, provided by the
                        source system during a multi-step business

                        process.  The key is needed by subsequent operations to complete
                        the desired processing.

                        '
                      x-used-in: [PersAutoModRq]
                      x-acord-xref: ['%SIGNONENTITY.SessKey']
                      type: [string, 'null']
                    priorPolicyNumber:
                      description: 'Used in situations where there is a one to one
                        correspondence between a current policy

                        and the one being converted, replaced, exchanged, or reissued.

                        '
                      x-used-in: [Life, Annuities]
                      x-acord-xref: ['#1.PriorPolNumber']
                      type: [string, 'null']
                    description: {description: 'Short description of the policy (eg,
                        ''2006 Harley Road King'').', type: string}
                    policyStatus:
                      description: 'The current status of the policy in text as decoded
                        from the source system.  Either policyStatus or

                        policyStatusCode MUST be populated.

                        '
                      type: [string, 'null']
                    policyStatusCode:
                      description: 'The current status of the policy as represented
                        by a code from the source system.  Either policyStatus

                        or policyStatusCode MUST be populated.

                        '
                      type: [string, 'null']
                    transactionStatus:
                      description: 'The transaction status is additional information
                        to the policy status, which is an indicator of a possible

                        change in the policy status due to a pending transaction.  Example:  cancellation
                        in process.  Either

                        transactionStatus or transactionStatusCode must be specfied.

                        '
                      x-required-in: [Home, Auto]
                      type: [string, 'null']
                    transactionStatusCode:
                      description: 'The transaction status code is additional information
                        to the policy status, which is a code indicating a possible

                        change in the policy status due to a pending transaction.  Example:  cancellation
                        in process.  Either

                        transactionStatus or transactionStatusCode must be specfied.

                        '
                      x-required-in: [Home, Auto]
                      type: [string, 'null']
                    lineOfBusiness:
                      description: 'The policy package (ie, policy type). This a ''hint''
                        with respect to the data to found in

                        #.policyDetail.

                        '
                      enum: [Auto, Homeowners, Farm, Farm Pollution, Farm Umbrella,
                        Personal Umbrella, Commercial, Commercial Umbrella, Life,
                        Annuity, Rural]
                    locations:
                      description: 'All of the locations which are associated with
                        this policy or contract.

                        '
                      type: [array, 'null']
                      items:
                        description: 'This object represents a geographical location,
                          which contains items to be insured, such as

                          dwellings and structures, which are fixed to the location,
                          and insured items (vehicles, etc.)

                          which MAY or MAY NOT be fixed to the location.

                          '
                        required: [id, address, acres, typeFarming, ownership]
                        properties:
                          id: {description: 'The sequence or unit number.  This is
                              only valid in the context of

                              the transaction. Refer to the description property for
                              a

                              persistent identifier.

                              ', type: string}
                          address:
                            description: The address of this location
                            required: &id0001 [addressType, addressAggregate, street1,
                              street2, city, state, countyCode, county, townshipCode,
                              township, postalCode, country]
                            properties: &id0002
                              addressType:
                                description: Future use.  If used, SHOULD be set to
                                  'Mailing'.
                                enum: [Mailing]
                              addressAggregate:
                                description: 'The aggregate address for use when the
                                  individual components are not known.

                                  '
                                type: [string, 'null']
                              street1:
                                description: First line of the postal address, e.g.
                                  100 Main St.
                                type: [string, 'null']
                              street2:
                                description: Second line of the postal address, e.g.
                                  Apt 100.
                                type: [string, 'null']
                              city:
                                type: [string, 'null']
                              state:
                                description: For domestic addresses, use USPS two-digit
                                  state code.
                                type: [string, 'null']
                              countyCode:
                                description: 'Properties countyCode and county are
                                  mutually exclusive.  Use countyCode when the source

                                  system provides a two-character code.  If the source
                                  is the actual County name, then use

                                  the county property.

                                  '
                                type: [string, 'null']
                              county:
                                description: 'Properties countyCode and county are
                                  mutually exclusive.  Use countyCode when the source

                                  system provides a two-character code.  If the source
                                  is the actual County name, then use

                                  the county property.

                                  '
                                type: [string, 'null']
                              townshipCode:
                                description: 'Properties townshipCode and township
                                  are mutually exclusive.  Use townshipCode when the
                                  source

                                  system provides a two-character code.  If the source
                                  is the actual Township name, then use

                                  the township property.

                                  '
                                type: [string, 'null']
                              township:
                                description: 'Properties townshipCode and township
                                  are mutually exclusive.  Use townshipCode when the
                                  source

                                  system provides a two-character code.  If the source
                                  is the actual Township name, then use

                                  the township property.

                                  '
                                type: [string, 'null']
                              postalCode:
                                type: [string, 'null']
                              country:
                                type: [string, 'null']
                          acres: {description: (Farm) The number of acres at this
                              location, type: number}
                          typeFarming: {description: '(Farm and Pollution) The type
                              of farming done at the cited location.

                              ', type: string}
                          ownership:
                            description: '(Pollution) Indicator whether the location
                              is Owned or Leased

                              '
                            enum: [Leased, Owned]
                    policyDetails: {description: 'This property contains one or more
                        PolicyDetail-XXX models, each of which contains detail information
                        for

                        the policy.


                        There are three PolicyDetail-XXX models:

                        1.  PolicyDetail-Personal:  This is used for the Auto, Homeowners,
                        and Rural lines.

                        2.  PolicyDetail-Life:  This is used for the Life and Annuity
                        lines.

                        3.  PolciyDetail-Commercial:  This is used for Farm and Commercial
                        lines.

                        ', type: object}
                    insuranceScore:
                      description: 'The score or index used to rate the policy, such
                        as a credit score or other indicator of financial

                        health.

                        '
                      x-required-in: [Homeowners]
                      type: [string, 'null']
                    issueAge:
                      description: 'The age of the insured or annuitant at the time
                        of issue. This is a policy

                        level property, meaning that it applies to the entire policy
                        package. This usage is more common

                        in Annuity contracts.  For a life insurance policy, it is
                        more common to specify the issue age

                        of the insured at the Coverage

                        level.

                        '
                      x-optional-in: [Life, Annuities]
                      type: [number, 'null']
                      format: integer
                    originalInceptionDate: {description: The date the policy or contract
                        was first in force., type: string, format: date}
                    termEffectiveDate: {description: First effective date of the policy
                        (insurance) or contract (annuity) term., type: string, format: date}
                    termExpirationDate:
                      description: The date the policy or contract term expires.
                      type: [string, 'null']
                      format: date
                    cancelDate:
                      type: [string, 'null']
                      format: date
                    maturityDate:
                      description: '(Life/Annuity) The date at which the policy or
                        contract matures--premiums are no longer

                        being collected.

                        '
                      type: [string, 'null']
                      format: date
                    policyTerm:
                      description: 'The term of the current policy, in months.

                        '
                      type: [number, 'null']
                    premium: {description: The rolled-up value of the premiums of
                        the Insurance Lines, type: number}
                    billingDetails:
                      description: details about the billing on this policy.
                      required: [billingMode, paymentMode]
                      properties:
                        billingMode:
                          description: 'The method used to present the bill to the
                            member

                            '
                          x-required-in: [rural]
                          enum: [Direct, Agency, 'null']
                        paymentMode: {description: 'The Mode of billing/payment, i.e.
                            Monthly, Quarterly or Annually.

                            ', type: string}
                    policyAssociations:
                      description: 'A list of the parties (persons or businesses)
                        which have an association or interest in the policy,

                        but are not necessarily clients of the enterprise.

                        '
                      type: array
                      items:
                        description: 'The PolicyAssociation model is used to model
                          those entities (person or organization) which have an

                          interest in a Policy, whose data is not necessarily sourced
                          from the client recordkeeping system.


                          The exact nature of the association is given in the associationType
                          and assoicationSubType properties.

                          '
                        required: [clientId, locationId, name, address, referenceData,
                          associationType, associationTypeCode, associationSubType,
                          associationRelationship, demographics]
                        properties:
                          clientId:
                            description: 'The client id from the the client record
                              keeping system.

                              '
                            type: [string, 'null']
                          locationId:
                            description: 'If the interest is tied to a specific location,
                              use this to refer to the Location.Id property.

                              '
                            x-used-by: [Homeowners]
                            type: [string, 'null']
                          name: {type: string}
                          address: &id0004
                            description: "Address model--used with various parent\
                              \ objects to describe the US Postal Service\nlocation.\
                              \ \n"
                            required: *id0001
                            properties: *id0002
                          referenceData:
                            description: "Reference information for this association.\
                              \  The data in this field could represent a loan number\
                              \ or case\nnumber in the case of assignee (Life) or\
                              \ PolicyInterest (farm).  It could represent the percentage\
                              \ split \nfor a Beneficiary (Life).\n"
                            type: [string, 'null']
                          associationType:
                            description: "Description of the type of association:\
                              \  (Life) Assignee, Beneficiary; (Farm) Policy Interests,\
                              \ (Multiple) \nAdditional Named Insured.  Either #.associationType\
                              \ or #.associationTypeCode must be valued to describe\
                              \ the\nrelationship of this object with the parent Policy.\n"
                            type: [string, 'null']
                          associationTypeCode:
                            description: "Descriptive code for the type of association:\
                              \  (Life) Assignee, Beneficiary; (Farm) Policy Interests,\
                              \ (Multiple) \nAdditional Named Insured.  Either #.associationType\
                              \ or #.associationTypeCode must be valued to describe\
                              \ the\nrelationship of this object with the parent Policy.\n"
                            type: [string, 'null']
                          associationSubType:
                            description: 'Further describes the association to the
                              policy.  In the case of Beneficiary (Life), describes
                              the Beneficiary

                              type:  Primary or Contingent.

                              '
                            type: [string, 'null']
                          associationRelationship:
                            description: "This field is used to describe the relationship\
                              \ of the Party in this model (PolicyAssociation) to\
                              \ \nthe parent Policy model.\n"
                            x-used-by: [Life, Annuities]
                            type: [string, 'null']
                            example:
                            - PolicyAssociation: {'!...': null, associationType: Beneficiary,
                                associationSubType: Primary, associationRelationship: Son,
                                '...!': null}
                          demographics:
                            description: 'Information about the party associated with
                              the policy.

                              '
                            required: [gender, genderCode, maritalStatus, maritalStatusCode,
                              dateOfBirth, dateOfDeath, driversLicenseState, driversLicenseNumber]
                            properties:
                              gender:
                                description: "The gender of the client, if known.\
                                  \  Either #.gender or #.genderCode is required.\
                                  \ \n"
                                enum: [Male, Female, Other, Unknown, 'null']
                              genderCode:
                                description: 'The system code representing the gender.
                                  Either #.gender or #.genderCode is required.

                                  '
                                type: [string, 'null']
                              maritalStatus:
                                description: 'Either #.maritalStatus or #.maritalStatusCode
                                  is required

                                  '
                                enum: [Deceased, Estranged, Single, Legally Separated,
                                  Married, Divorced, Unknown, Widowed, 'null']
                              maritalStatusCode:
                                description: The system code representing the marital
                                  status.
                                type: [string, 'null']
                              dateOfBirth: {description: The date of birth of the
                                  client., type: string, format: date}
                              dateOfDeath:
                                type: [string, 'null']
                                format: date
                              driversLicenseState:
                                type: [string, 'null']
                              driversLicenseNumber:
                                type: [string, 'null']
                    supplementalDocuments:
                      description: 'Any documents attached to the policy which are
                        required for it''s issuance.

                        '
                      type: array
                      items:
                        description: This model containes references to supplemental
                          documentation for a policy.
                        required: [code, description, dateReceived]
                        properties:
                          code:
                            description: 'The code assigned to the document by the
                              record-keeping system.

                              '
                            type: [string, 'null']
                          description:
                            type: [string, 'null']
                          dateReceived:
                            type: [number, 'null']
                            format: date
        '401': {description: Unauthorized or invalid token}
        '404': {description: Entity not found}
        '500': {description: Server error}
  /{policyId}/interests:
    get:
      summary: An array of Interest
      parameters:
      - *id0003
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  description: An object which relates two objects via type and id
                  required: [rootId, rootType, rootTypeCode, childId, childType, childTypeCode,
                    relationshipType, relationshipTypeCode, effectiveDate, expirationDate,
                    address]
                  properties:
                    rootId: {description: The id of the source object., type: string}
                    rootType:
                      description: The type of the root object.
                      enum: [Policy, Billing Account, Claim, Membership, Quote, Client]
                    rootTypeCode:
                      description: The type code of the root object.
                      type: [string, 'null']
                    childId: {description: The id of the target object, type: string}
                    childType:
                      description: The type of the target object.
                      enum: [Policy, Billing Account, Claim, Membership, Quote, Client]
                    childTypeCode:
                      description: The type code of the target object.
                      type: [string, 'null']
                    relationshipType: {description: The relationship between the root
                        and target object., type: string}
                    relationshipTypeCode:
                      description: The code for the relationship between the root
                        and target object.
                      type: [string, 'null']
                    effectiveDate: {type: string, format: date}
                    expirationDate:
                      type: [string, 'null']
                      format: date
                    address: *id0004
        '401': {description: Unauthorized or invalid token}
        '404': {description: Entity not found}
        '500': {description: Server error}
parameters:
  PolicyId: *id0003
