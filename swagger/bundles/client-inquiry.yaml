swagger: '2.0'
info:
  version: 1.0.0 SNAPSHOT
  title: client-inquiry
  description: '

    This API is used to inquire about clients from the enterprise client record keeping
    system.  This inquiry consists of two pieces of information:


    _Some combination of client demographic information_


    * First Name

    * Last Name

    * Date of Birth

    * Tax ID (SSN)


    _A business filter to focus the inquiry_: This filter is an array of name/value
    pair objects.  In the current client record keeping system Exceed), the relationship
    of a client to a particular policy is termed a ''business object.''   The filter
    is used to limit the inquiry to one OR more business objects to which the client
    has a relationship to.


    #### Service Functionality

    This service sits in front of the [process layer](http://connections/issite/iCAF/SitePages/Home.aspx)
    exposing the inquiry functionality to the experience layer users.


    ![](http://connections/issite/EWS/SiteAssets/experience-client-inquiry.png)


    The client uses HTTP POST with the desired query fields in the request body, using
    the JSON format detailed in the request specification.  The Process Layer assembles
    the data, using the client identifying information and applying the desired filter.  Upon
    completion of the data gathering process(es), a JSON encoded body is returned
    as the requested resource.


    #### Known Implementations

    * Life Death Claims (LDC)


    _ Sample Claim inquiry using the Client''s first/last name_


    [JSON Request](http://connections/issite/ews/SiteAssets/client-inquiry-request-response/client-inquiry-firstlastname-CLM-rq.json.txt)
    --> [JSON Response](http://connections/issite/ews/SiteAssets/client-inquiry-request-response/client-inquiry-firstlastname-CLM-rs.json.txt)


    _Sample Life Death Claim inquiry using the Client''s first/last name_


    [JSON Request](http://connections/issite/ews/SiteAssets/client-inquiry-request-response/client-inquiry-firstlastname-LDC-rq.json.txt)
    --> [JSON Response](http://connections/issite/ews/SiteAssets/client-inquiry-request-response/client-inquiry-firstlastname-LDC-rs.json.txt)


    _Sample Life Death Claim inquiry using on the Client''s last name_


    [JSON Request](http://connections/issite/ews/SiteAssets/client-inquiry-request-response/client-inquiry-lastname-LDC-rq.json.txt)
    --> [JSON Response](http://connections/issite/ews/SiteAssets/client-inquiry-request-response/client-inquiry-lastname-LDC-rs.json.txt)


    #### Performance Expectation

    TBD


    #### Service Capacity Supported

    TBD


    #### Suggested Test Scenario

    TBD


    #### Service Availability

    TBD


    #### Service Security

    TBD

    '
  contact: {name: Enterprise Web Services Team, email: EWSDevelopers@infambureau.com,
    url: 'http://connections/issite/ews/SitePages/Home.aspx'}
host: ap-karafa-dev:8181
schemes: [http, https]
consumes: [application/json]
produces: [application/json]
paths:
  /client-inquiry:
    post:
      summary: Request client information
      description: 'Requests a client or client list which meet demographic information
        and which are filtered by certain business relationships.

        '
      parameters:
      - name: client-inquiry-request
        in: body
        description: The input parameters in JSON format
        required: true
        schema:
          type: object
          properties:
            firstName: {type: string}
            lastName: {type: string}
            dateOfBirth: {type: string, format: date-time}
            taxId: {type: string}
            filters:
              type: array
              items:
                type: object
                properties:
                  filter:
                    type: object
                    properties:
                      name: {type: string}
                      value: {type: string}
      responses:
        '200':
          description: 'Success.  The client information with the added business context
            for the requested relationship(s).

            '
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    clients:
                      type: array
                      items:
                        type: object
                        properties:
                          id: {type: string}
                          name: {type: string}
                          firstName: {type: string}
                          lastName: {type: string}
                          dateOfBirth: {type: string, format: date}
                          taxId: {type: string}
                          rootId: {type: string}
                          type: {type: string}
                          typeCode: {type: string}
                          childId: {type: string}
                        required: [id, name, firstName, lastName, dateOfBirth, taxId,
                          rootId, type, typeCode, childId]
                  required: [clients]
            required: [data]
        default: {description: Failure}
