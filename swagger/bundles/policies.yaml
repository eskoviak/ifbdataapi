swagger: '2.0'
info:
  version: 2.0.0
  title: policies
  description: "This is the entry point for policy inquiries.  Policy inquiries are\
    \ supported for the following types of lines of Insurance:\n\n| Personal | Commercial\
    \ | Life |\n| --- | --- | --- |\n| Auto | Farm | Life |\n| Home | Pollution |\
    \ Annuities |\n|Umbrella | Farm Umbrella | Rural |\n\n#### Service Functionality\n\
    This API is called with a policyId parameter.  If successful, the resultant resource\
    \ is a JSON oject, based on the prefix of the policyId.\n\n#### Instance Diagrams\n\
    *Auto Policy* \n    ![Auto Policy](http://connections/issite/ews/SiteAssets/Auto%20Policy%20Structure.png)\n\
    \n*Home Policy*\n    ![Home Policy](http://connections/issite/ews/SiteAssets/Home%20Policy%20Structure.png)\n\
    \n#### Performance Expectation\nStandard SLA applies.\n\n#### Service Capacity\
    \ Supported\nStandard Capacity applies\n\n#### Suggested Test Scenario\nTBD\n\n\
    #### Service Availability\nStandard Service Availability applies\n\n#### Service\
    \ Security\nHTTPS/SSL\n"
  contact: {name: Mary Boscaccia, url: 'http://www.infarmbureau.com', email: mary.Boscacci@infarmbureau.com}
produces: [application/json]
schemes: [https]
basePath: /policies
paths:
  /{policyId}:
    get:
      summary: Return a policy object
      description: 'For a given policyId, returns a JSON object representing the detailed
        client information, if the id exists on the Client system.

        '
      parameters:
      - {$ref: '#/parameters/PolicyId'}
      responses:
        '200':
          description: 'Success:  Includes the source return codes: `SU-1000`, `TE-1005`

            '
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  description: 'A top-level model which represents an insurance Policy
                    (of various types) or an annuity Contract (fixed and variable).

                    '
                  x-acord-agg-xref: {'#LAH': OLife/Holding/Policy}
                  required: [id, transactionId, businessPurposeTypeCode, transactionRequestDate,
                    transactionEffectiveDate, quoteSequenceNumber, transactionSequenceNumber,
                    policyId, policyNumber, priorPolicyNumber, description, policyStatus,
                    policyStatusCode, controllingStateProvinceCode, transactionStatus,
                    transactionStatusCode, lineOfBusiness, lineOfBusinessCode, locations,
                    policyDetails, insuranceScore, issueAge, originalInceptionDate,
                    termEffectiveDate, termExpirationDate, cancelDate, maturityDate,
                    policyTerm, premium, billingDetails, policyAssociations, supplementalDocuments]
                  properties:
                    id: {description: 'The policy ID is a globally unique id. This
                        could be a GUID or a composite of system information and policy
                        number but in the latter case MUST not be used to infer information
                        about the policy.

                        ', type: string}
                    transactionId:
                      description: 'A transaction, or session key, provided by the
                        source system during a multi-step business process.  The key
                        is needed by subsequent operations to complete the desired
                        processing.

                        '
                      x-used-in: [PersAutoModRq]
                      x-acord-xref: ['%SIGNONENTITY.SessKey']
                      type: [string, 'null']
                    businessPurposeTypeCode:
                      description: 'A code indicating the business event being submitted
                        in this message.

                        '
                      type: [string, 'null']
                    transactionRequestDate:
                      description: 'The date the transaction was requested.

                        '
                      type: [string, 'null']
                      format: date
                    transactionEffectiveDate:
                      description: 'The date the transaction is effective.

                        '
                      type: [string, 'null']
                      format: date
                    quoteSequenceNumber:
                      description: "A unique number used to tie quotes together. \
                        \ Multiple quotes can be prepared for a single insurance request,\
                        \ adjusting values to match the premium to a desired level.\
                        \  This proporty is used to track the interations of quotes.\
                        \  \n"
                      type: [string, 'null']
                    transactionSequenceNumber:
                      description: 'A system assigned number which orders the transactions
                        as they occur in the recordkeeping system, during the policy
                        term.  Transaction 0 (T0) is reserved for renewal.  In a new
                        term, the sequence numbering is reset to T0 (renewal).

                        '
                      type: [string, 'null']
                    policyId:
                      description: 'The identfier of the policy in the record keeping
                        system.  This may or may not be similar to the #.id property,
                        and may or may not contain the #.policyNumber.

                        '
                      type: [string, 'null']
                    policyNumber:
                      description: 'The recordkeeping system Policy Number; this is
                        NOT globally unique, and can be distinct from the policyId.

                        '
                      type: [string, 'null']
                    priorPolicyNumber:
                      description: 'Used in situations where there is a one-to-one
                        correspondence between a current policy and the one being
                        converted, replaced, exchanged, or re-issued.

                        '
                      x-used-in: [Life, Annuities]
                      x-acord-xref: ['#LAH.PriorPolNumber']
                      type: [string, 'null']
                    lineOfBusinessCode:
                      description: ''
                      type: [string, 'null']
                    description: {description: 'Short description of the policy (eg,
                        ''2006 Harley Road King'').', type: string}
                    policyStatus:
                      description: 'The current status of the policy in text as decoded
                        from the source system.  Either policyStatus or policyStatusCode
                        MUST be populated.

                        '
                      type: [string, 'null']
                    policyStatusCode:
                      description: 'The current status of the policy as represented
                        by a code from the source system.  Either policyStatus or
                        policyStatusCode MUST be populated.

                        '
                      type: [string, 'null']
                    controllingStateProvinceCode:
                      description: 'A code for the state used to determine some rating
                        factors and Insurance Services Office reporting categories.
                        The source of the code is the U.S. Postal Service two letter
                        state abbreviation.

                        '
                      type: [string, 'null']
                    transactionStatus:
                      description: 'The transaction status is additional information
                        to the policy status, which is an indicator of a possible
                        change in the policy status due to a pending transaction.  Example:  cancellation
                        in process.  Either transactionStatus or transactionStatusCode
                        must be specfied.

                        '
                      x-required-in: [Home, Auto]
                      type: [string, 'null']
                    transactionStatusCode:
                      description: 'The transaction status code is additional information
                        to the policy status, which is a code indicating a possible
                        change in the policy status due to a pending transaction.  Example:  cancellation
                        in process.  Either transactionStatus or transactionStatusCode
                        must be specfied.

                        '
                      x-required-in: [Home, Auto]
                      type: [string, 'null']
                    lineOfBusiness:
                      description: 'The policy package (ie, policy type). This a ''hint''
                        with respect to the data to found in

                        #.policyDetail.

                        '
                      type: [string]
                      enum: [Auto, Homeowners, Farm, Farm Pollution, Farm Umbrella,
                        Personal Umbrella, Commercial, Commercial Umbrella, Life,
                        Annuity, Rural]
                    locations:
                      description: 'All of the locations which are associated with
                        this policy or contract.

                        '
                      type: array
                      items:
                        definitions:
                          Acknowledgement:
                            description: 'The acknowledgement model.  This model is
                              used to represent technical information which is returned
                              outside of the business data (response payload).

                              '
                            required: [code, description]
                            properties:
                              code:
                                description: 'The code returned from the source system
                                  as a result of this transaction.

                                  '
                                type: [string, 'null']
                              description:
                                description: 'The textual message provided by the
                                  source system

                                  '
                                type: [string, 'null']
                          Address:
                            description: "Address model--used with various parent\
                              \ objects to describe the US Postal Service\nlocation.\
                              \ \n"
                            required: [addressType, addressAggregate, street1, street2,
                              city, state, countyCode, county, townshipCode, township,
                              postalCode, country]
                            properties:
                              addressType:
                                description: 'Future use.  If used, SHOULD be set
                                  to ''Mailing''.

                                  '
                                type: [string]
                                enum: [Mailing]
                              addressAggregate:
                                description: 'The aggregate address for use when the
                                  individual components are not known.

                                  '
                                type: [string, 'null']
                              street1:
                                description: 'First line of the postal address, e.g.
                                  100 Main St.

                                  '
                                type: [string, 'null']
                              street2:
                                description: 'Second line of the postal address, e.g.
                                  Unit 100.

                                  '
                                type: [string, 'null']
                              city:
                                type: [string, 'null']
                              state:
                                description: 'For domestic addresses, use USPS two-digit
                                  state code.

                                  '
                                type: [string, 'null']
                              countyCode:
                                description: 'Properties countyCode and county are
                                  mutually exclusive.  Use countyCode when the source
                                  system provides a two-character code.  If the source
                                  is the actual County name, then use the county property.

                                  '
                                type: [string, 'null']
                              county:
                                description: 'Properties countyCode and county are
                                  mutually exclusive.  Use countyCode when the source
                                  system provides a two-character code.  If the source
                                  is the actual County name, then use the county property.

                                  '
                                type: [string, 'null']
                              townshipCode:
                                description: 'Properties townshipCode and township
                                  are mutually exclusive.  Use townshipCode when the
                                  source system provides a two-character code.  If
                                  the source is the actual Township name, then use
                                  the township property.

                                  '
                                type: [string, 'null']
                              township:
                                description: 'Properties townshipCode and township
                                  are mutually exclusive.  Use townshipCode when the
                                  source system provides a two-character code.  If
                                  the source is the actual Township name, then use
                                  the township property.

                                  '
                                type: [string, 'null']
                              postalCode:
                                description: 'The USPS postal code, also known as
                                  the zip code.  Should be in the format ##### or
                                  #####-#### (zip plus four).

                                  '
                                type: [string, 'null']
                              country:
                                description: 'The name of the country.

                                  '
                                type: [string, 'null']
                          Agent:
                            description: A model for an agent or representative of
                              the firm.
                            required: [id, agentName, title, phoneNumber, faxNumber,
                              emailAddress, address, biography, agencyManagerId, agencyManagerName]
                            properties:
                              id: {type: string}
                              agentName: {type: string}
                              title:
                                type: [string, 'null']
                              phoneNumber: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Phone'}
                              faxNumber:
                                type: [string, 'null']
                              emailAddress:
                                type: [string, 'null']
                              address:
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Address'}
                              biography:
                                type: [string, 'null']
                              agencyManagerId:
                                type: [string, 'null']
                              agencyManagerName:
                                type: [string, 'null']
                          Client:
                            description: 'A Client object represents a legal entity
                              with a defined relationship to the insurance policy
                              or

                              annuity contract.  A the model represents either a person
                              (i.e. the insured or the annuitant),

                              an organization (i.e. a bank or assignee), or it can
                              be Unknown (i.e. a trust, which can be either

                              a person or an organization).

                              '
                            x-acord-xref:
                            - {'#1': OLifE.Party}
                            - {'#2': ACORD}
                            required: [id, sourceSystemType, sourceSystemTypeCode,
                              name, personName, phoneNumbers, emailAddresses, taxId,
                              addresses, preferences, demographics]
                            properties:
                              id: {description: A unique identifier for the client,
                                type: string}
                              sourceSystemType:
                                description: "The type of client as recorded on the\
                                  \ source system.  Note: either #.sourceSystemType\
                                  \ or \n#.sourceSystemTypeCode is required.\n"
                                type: [string, 'null']
                              sourceSystemTypeCode:
                                description: 'The type code of client as recorded
                                  on the source system. Note: either #.sourceSystemType

                                  or #.sourceSystemTypeCode is required.

                                  '
                                type: [string, 'null']
                              name:
                                description: 'A display-formatted name of the individual
                                  or business for this Client.  For an organization,
                                  this is

                                  the legal name of the organization.  For an individual,
                                  this would be the `concatenated` name, which is

                                  stored on the system.  If the individual''s name
                                  is to be modeled as name components, use the #.personName

                                  property.

                                  '
                                type: [string, 'null']
                              personName: {description: "The component parts of the\
                                  \ Client name, when the Client represents an individual,\
                                  \ if known.  For individuals, \neither the #.name\
                                  \ or #personName property should be populated. \
                                  \ It is expected that this property will be null\n\
                                  for organizations.\n", $ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/PersonName'}
                              phoneNumbers:
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Phone'}
                              emailAddresses:
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Email'}
                              taxId:
                                description: 'This is a government assigned identifier.  In
                                  the US, this is either the Tax ID Number (TIN) for
                                  a business

                                  or the Social Security Number (SSN) for and individual.

                                  '
                                x-acord-xref: ['#1.GovtID', '#2.TaxIdentity']
                                type: [string, 'null']
                              addresses:
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Address'}
                              preferences: {description: 'A schemaless object key/value
                                  pairs representing Client preferences

                                  This is used for configuring contact preferences.

                                  ', type: object}
                              demographics: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Demographics'}
                          ClientAccount:
                            description: A Client Account model
                            required: [id, accountNumber, accountName, contactName,
                              address, phoneNumber, agentId, agentName, relatedClients]
                            properties:
                              id: {description: The unique identifier for the ClientAccount,
                                type: string}
                              accountNumber: {description: The Client Account number
                                  that is displayed., type: string}
                              accountName: {description: 'The name given to the account
                                  by the client.

                                  Defaults to the head of household''s last name.

                                  ', type: string}
                              contactName:
                                description: 'Name of the primary contact for the
                                  Client Account.

                                  Defaults to the "Head of Household" Client.

                                  '
                                type: [string, 'null']
                              address: {description: The address for correspondence
                                  related to the Client Account., $ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Address'}
                              phoneNumber: {description: The primary phone number
                                  for the Client Account contact., $ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Phone'}
                              agentId: {description: 'The id of the agent associated
                                  with the account.

                                  ', type: string}
                              agentName: {type: string}
                              relatedClients:
                                description: 'Array of objects containing relatedClients
                                  associated to ClientAccount

                                  '
                                type: array
                                items:
                                  type: object
                                  properties:
                                    clientId: {type: string}
                                    clientAccountRelationship: {type: string}
                                    clientAccountRelationshipCode: {type: string}
                          ClientInterest:
                            description: '(DEPRECATED IN FAVOR OF INTEREST)

                              Represents the relationship between an object and a
                              client

                              '
                            properties:
                              relationshipTypeCode: {description: 'Code which descibes
                                  the relationship between the two objects being refererenced.


                                  Either #.relationshipTypeCode or #.relationshipType
                                  MUST be specfied.

                                  ', type: string}
                              relationshipType: {type: string}
                              objectId: {description: 'Links a client to another related
                                  object (policy, membership, billing account)', type: string}
                              objectType: {description: a description of the object
                                  associated with the client, type: string}
                              clientId: {type: string}
                              expirationDate: {type: string, format: date}
                              effectiveDate: {type: string, format: date}
                          Coverage:
                            description: 'Condition covered or excluded by an insurance
                              policy or annuity contract.  Coverages

                              are also known as ''Riders.

                              '
                            required: [deductibles, description, planCode, coverageDetail,
                              coverageFlags, coverageSchedule, limits, premium, coverageBenefit,
                              isEndorsement, isExtended, isExcluded, isWaived, inclusions]
                            properties:
                              deductibles:
                                description: 'Pro-rated portion of a potential claim
                                  which is not paid by the insurer. A deductible may
                                  apply to a single or multiple coverages, or the
                                  entire policy.

                                  '
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Hash'}
                              description: {description: 'A unique label used for
                                  the coverage (ex. Bodily Injury Liability).

                                  In POINT, maps to the coverage description.  For
                                  (Life), contains the plan description (business
                                  name of the plan).

                                  ', type: string}
                              planCode: {description: 'The code used by the host system
                                  that uniquely identifies this coverage.

                                  ', type: string}
                              coverageDetail: {description: '(Life/Annuities) Detail
                                  data which is specific to a life policy or annuity
                                  contract, but common accross all such entities.

                                  ', type: object, $ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/CoverageDetail-Life'}
                              coverageFlags:
                                description: 'This property is an arry of YesNoChoice
                                  models representing coverage options (yes/no choices)

                                  '
                                type: [array, 'null']
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/YesNoChoice'}
                                example:
                                - - {choice: 'Pollution, with Cleanup', state: true}
                              coverageSchedules:
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Hash'}
                                example:
                                - coverageSchedules:
                                  - {name: null, value: Building 1}
                                  - {name: null, value: Building 2}
                                - coverageSchedules:
                                  - {name: startDate, value: '1776-07-04'}
                                  - {name: endDate, value: '1776-07-04'}
                                - coverageSchedules:
                                  - {name: classCode, value: CCCC}
                                  - {name: classCodeDescription, value: CCCC Description}
                                - coverageSchedules:
                                  - name: Liability
                                    value:
                                    - {name: Premium Basis, value: some basis}
                                    - {name: Rate, value: rate}
                              limits:
                                description: "Limits of liability (on the part of\
                                  \ the insurer) and other details of the Coverage\n\
                                  in the form of a name/value pair.\n\nExample--for\
                                  \ a #.description = 'Residence', this array may\
                                  \ have an object 'Liability Limit':1000000 \n"
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Limit'}
                              premium: {type: number}
                              coverageBenefit:
                                description: '(Life/Annuity) Models specific benefits
                                  to the coverage, which are usually additional premium
                                  and modify

                                  the owning coverage.

                                  '
                                type: [array, 'null']
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/CoverageBenefit'}
                              isEndorsement: {description: Flag which indicates if
                                  this is a coverage endorsement., type: boolean}
                              isExtended:
                                description: flag for extended coverage
                                type: [boolean, 'null']
                              isExcluded:
                                description: flag for excluded coverage
                                type: [boolean, 'null']
                              isWaived:
                                description: flag for waived coverage
                                type: [boolean, 'null']
                              inclusions:
                                description: '(Farm) Specific coverage inclusions
                                  which are not separate coverages (i.e. have

                                  no associated premium).  Example:  ''Equipment Breakdown
                                  Coverage''


                                  Items are an array of strings.

                                  '
                                type: array
                                items:
                                  type: [string, 'null']
                          CoverageBenefit:
                            description: '(Life) A benefit which modifieds the parent
                              coverage (to which it only applies).

                              '
                            required: [description, ratingFactor, premiumAmount, effectiveDate,
                              expirationDate]
                            properties:
                              description: {description: 'The description of the benefit.

                                  ', type: string}
                              ratingFactor:
                                description: 'The rating that must be applied to the
                                  standard premium to arrive at the correct premium
                                  for this benefit.  Stored as a percentage (rate).

                                  '
                                type: [number]
                              premiumAmount: {description: 'The amount of the premium
                                  for this benefit.

                                  ', type: number}
                              effectiveDate: {description: 'The effective date of
                                  this benefit.

                                  ', type: string, format: date}
                              expirationDate:
                                description: 'The date at which this benefit expires.

                                  '
                                type: [string, 'null']
                                format: date
                          CoverageDetail-Life:
                            description: 'Condition covered or excluded by a life
                              insurance policy or annuities contract.

                              '
                            required: [issueAge, type, guidelineAnnualPremium, deathBenefitOption,
                              termLevelYears, rateClassification, tableRating, tableRatingPremiumAmount,
                              flatRatingPremiumAmount, faceAmount, annualPremium,
                              effectiveDate, expirationDate, interestCredited, termInterestRate]
                            properties:
                              issueAge: {description: 'The age of the insurred at
                                  issue

                                  ', type: number, format: integer}
                              coverageType: {description: 'The type of coverage this
                                  is (i.e. base).

                                  ', type: string}
                              guidelineAnnualPremium:
                                description: 'The annual premium level above which
                                  the contract becomes a Modified Endowment Contract.

                                  '
                                type: [number, 'null']
                              deathBenefitOption:
                                description: 'Option chosen for this contract which
                                  would affect the death proceeds- i.e. increasing-
                                  level

                                  '
                                type: [string, 'null']
                              termLevelYears:
                                description: 'The duration at which the death benefit
                                  stops decreasing and remains level.

                                  '
                                type: [number, 'null']
                                format: integer
                              rateClassification:
                                description: 'Underwriting rateClassification.

                                  '
                                type: [string, 'null']
                              tableRating:
                                description: 'The permanent table rating used.

                                  '
                                type: [string, 'null']
                              tableRatingPremiumAmount:
                                description: 'The amount of premium due to the table
                                  rating.

                                  '
                                type: [number, 'null']
                              flatRatingPremiumAmount:
                                description: 'The amount of premium due to the flat
                                  rating.

                                  '
                                type: [number, 'null']
                              faceAmount:
                                description: 'The current contractual amount of death
                                  benefit for this coverage.

                                  '
                                type: [number]
                              annualPremium: {description: 'The annual premium for
                                  this coverage.

                                  ', type: number}
                              effectiveDate: {description: 'The date upon which this
                                  coverage is effective.

                                  ', type: string, format: date}
                              expirationDate: {description: 'The date upon which this
                                  coverage terminates.

                                  ', type: string, format: date}
                              interestCredited:
                                description: 'The interest credited on this policy.

                                  '
                                type: [number, 'null']
                              termInterestRate:
                                description: 'The interest rate at which the face
                                  amount is commuted.

                                  '
                                type: [number, 'null']
                          Dividend:
                            description: 'Contains the Perm/Universal life policy
                              specific information regarding dividends

                              '
                            required: [dividendOption, totalPaidUpAdditions, oneYearTermAmount,
                              oneYearTermRefund, paidUpAdditionsCashValue, dividendsOnDeposit,
                              proRataDividend, terminalDividends, dividendOnDepositAmount,
                              dividendsOnDepositInterestRate]
                            properties:
                              dividendAmount: {description: 'The amount of the most
                                  recent dividend

                                  ', type: number}
                              dividendOption: {description: The Dividend options available.,
                                type: string}
                              totalPaidUpAdditions: {description: The total Paid Up
                                  Additions., type: number}
                              oneYearTermAmount: {description: 'The amount of accumulated
                                  one year term additions

                                  ', type: number}
                              oneYearTermRefund: {description: "The calculated refund\
                                  \ of cost of one year term additions.  \n"}
                              paidUpAdditionsCashValue: {description: the cash value
                                  of all Paid UP Additions (PUA)., type: number}
                              dividendsOnDeposit: {description: The total amount of
                                  dividends which have been paid to a deposit account--with
                                  interest., type: number}
                              proRataDividend: {description: The pro-rated dividend
                                  on the the policy., type: number}
                              terminalDividends: {description: The divdends paid when
                                  the policy terminates., type: number}
                              dividendOnDepositAmount: {description: Dividends on
                                  Deposit / Accumulate with Interest., type: number}
                              dividendsOnDepositInterestRate: {description: The interest
                                  rate being earned by the deposited dividends., type: number}
                          Limit:
                            description: 'The maximum amount for a Coverage.  In the
                              form of a name/value pair--

                              example:  ''Liability Limit''/10000000

                              '
                            required: [name, value]
                            properties:
                              name:
                                description: The name of a Limit
                                type: [string, 'null']
                              value: {description: The value of a Limit, type: number}
                          Deductible:
                            description: "A deductible covering one more more Coverages.\
                              \  Modeled as a name:value pair.\n\nExample:\n  name:\
                              \  'Each Item/Location'\n  value: 1000\n"
                            required: [name, value]
                            properties:
                              name:
                                description: The label of the deductible
                                type: [string, 'null']
                              value: {description: The value of the deductible, type: number}
                          Demographics:
                            description: 'Demographic information associated with
                              a client; may be null for businesses.

                              '
                            required: [gender, genderCode, maritalStatus, maritalStatusCode,
                              dateOfBirth, dateOfDeath, driversLicenseState, driversLicenseNumber]
                            properties:
                              gender:
                                description: 'The gender of the client, if known.  Either
                                  #/gender or #/genderCode is required.

                                  '
                                type: [string, 'null']
                                enum: [Male, Female, Other, Unknown]
                              genderCode:
                                description: 'The system code representing the gender.
                                  Either #/gender or #/genderCode is required.

                                  '
                                type: [string, 'null']
                              maritalStatus:
                                description: 'A textual representation of the marital
                                  status. Either #/maritalStatus or #/maritalStatusCode
                                  is required.

                                  '
                                type: [string, 'null']
                                enum: [Deceased, Estranged, Single, Legally Separated,
                                  Married, Divorced, Unknown, Widowed]
                              maritalStatusCode:
                                description: 'The system code representing the marital
                                  status. Either #/maritalStatus or #/maritalStatusCode
                                  is required.

                                  '
                                type: [string, 'null']
                              dateOfBirth: {description: 'The date of birth.

                                  ', type: string, format: date}
                              dateOfDeath:
                                description: 'The date of death.

                                  '
                                type: [string, 'null']
                                format: date
                              driversLicenseState:
                                type: [string, 'null']
                              driversLicenseNumber:
                                type: [string, 'null']
                          Discount:
                            description: 'A discount that modifies the premium for
                              a policy

                              '
                            required: [name, description, appliedDate]
                            properties:
                              name: {description: 'The label of the discount

                                  ', type: string}
                              description: {description: 'The description or value
                                  of the discount

                                  ', type: string}
                              appliedDate: {description: 'The date the modifier was
                                  first applied

                                  ', type: string, format: date}
                          Dwelling:
                            description: 'Model for Dwelling.  A dwelling is a building
                              which is inhabited by humans.   For other buildings,
                              use a structure.

                              '
                            required: [locationId, item, construction, dwellingType,
                              fireProtection, formTypeDescription, foundation, generalCondition,
                              numberOfFamilies, occupancy, roofType, roofAge, residenceType,
                              replacementValue, yearOfConstruction]
                            properties:
                              locationId: {description: 'The location Id for the dwelling.  There
                                  MUST be one and only one location for a dwelling,
                                  which contains the location specific information,
                                  such as address.  The location(s) are contained
                                  in the Policy model.

                                  ', type: string}
                              item: {description: 'An arbitrary, system assigned item
                                  number within the location dicriminates this structure
                                  on a location with multiple structures.

                                  '}
                              construction: {description: 'The type of construction
                                  of the building.

                                  ', type: string}
                              dwellingType: {description: 'Type of Dwelling (eg, house,
                                  apartment, condo, townhouse, rowhouse).

                                  ', type: string}
                              exposures:
                                description: 'Exposures are specific risks which have
                                  been identified during the underwriting process.

                                  '
                                type: [array, 'null']
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Hash'}
                              fireProtection: {description: 'The type of fire protection
                                  of the building

                                  ', type: string}
                              formTypeDescription:
                                description: 'The form type description of the building.  This
                                  is currently a data field which is specific to farm
                                  insurance.

                                  '
                                type: string
                                example:
                                - {formTypeDescription: HO-3 PLatinum}
                                - {formTypeDescription: DP}
                              foundation: {description: Foundation Type., type: string}
                              generalCondition: {description: 'The general condition
                                  of the building.

                                  ', type: string}
                              numberOfFamilies: {description: 'The number of families
                                  dwelling at this location.

                                  ', type: number, format: integer}
                              occupancy: {description: 'The type of residence of the
                                  dwelling.  Examples inlcude ''OWNER'', ''RENTED
                                  TO OTHERS''.

                                  ', type: string}
                              roofType: {description: Type of roof., type: string}
                              roofAge: {description: Age of roof in years., type: number,
                                format: integer}
                              residenceType: {description: The type of residence of
                                  the building., type: string}
                              replacementValue: {description: The cost to replace
                                  the dwelling., type: number, format: integer}
                              yearOfConstruction: {description: The year the dwelling
                                  was constructed., type: number, format: integer}
                              supplementalDocuments:
                                description: 'Any documents attached to the policy
                                  which are required for it''s issuance.

                                  '
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/SupplementalDocument'}
                          Structure:
                            description: 'A physical structure to be insured.  A structure
                              is a building which is uninhabited by

                              humans.  For a building which is inhabited by humans,
                              use dwelling.

                              '
                            required: [locationId, item, description, isBroadPeril,
                              isVacant, lossSettlement]
                            properties:
                              locationId:
                                description: 'The location number for the structure.  There
                                  MUST be at one and only

                                  one location for a structure, which contains the
                                  location specific information, such as

                                  address.  The location(s) are contained in the Policy
                                  model.

                                  '
                                x-required-in: [all]
                                type: string
                              item: {description: 'An arbitrary, system assigned item
                                  number within the location dicriminates this dwelling

                                  on a location with multiple dwellings.

                                  ', type: string}
                              description: {description: 'The description of the structure.  Example:  ''DAIRY
                                  COMPLEX''

                                  ', type: string}
                              isBroadPeril: {description: whether broad peril applies,
                                type: boolean}
                              isVacant: {description: Whether the structure is vacant,
                                type: boolean}
                              lossSettlement:
                                description: 'The option choosen for recovery should
                                  a loss occur.

                                  '
                                enum: [FRV, ACV, RC]
                          Hash:
                            description: 'A model for a name:value pair.  Used whenever
                              a data item is needed which only has a name and value.

                              This will eventually be used for:

                              * Limits

                              * Deductibles

                              * Discounts

                              * Exposures

                              Note:  Either property is nullable--the invoking contract
                              must specify usage.

                              '
                            required: [name, value]
                            x-used-by: [Dwelling.exposures]
                            properties:
                              name:
                                type: [string, 'null']
                              value:
                                type: [object, 'null']
                          Investment:
                            description: "(Life/Annuities) Specific information regarding\
                              \ Investments/Financial intruments particular to \n\
                              permanent (whole life or participating) and Universal\
                              \ life policies as well as Annuties.  This\nincludes\
                              \ loan information.\n"
                            required: [lastValueQuoteDate, currentInterestRate, netCashSurrenderValue,
                              totalSurrenderValue, guaranteedInterestRate, loanPayoffAmount,
                              currentLoanInterestRate, maximumLoanAmountAvailable,
                              guranteedCashValue, totalCashValue, premiumDepositFund]
                            properties:
                              lastValueQuoteDate:
                                description: The date for which the values were last
                                  quoted.
                                type: [string, 'null']
                                format: date
                              currentInterestRate:
                                description: The current interest rate for new money.
                                type: [number, 'null']
                              netCashSurrenderValue:
                                description: The net cash value if the insurance policy
                                  is surrendered.
                                type: [number, 'null']
                              totalSurrenderValue:
                                description: The total amount that would be received
                                  if the policy were to be surrendered.
                                type: [number, 'null']
                              guaranteedInterestRate:
                                description: The guaranteed interest rate.
                                type: [number, 'null']
                              loanPayoffAmount:
                                description: The amount needed to payoff the current
                                  loan.
                                type: [number, 'null']
                              currentLoanInterestRate:
                                description: The interest rate of the current loan
                                  on the policy.
                                type: [number, 'null']
                              maximumLoanAmountAvailable:
                                description: The maximum amount available for a loan
                                  on this policy.
                                type: [number, 'null']
                              guranteedCashValue:
                                description: the amount guaranteed as a cash value
                                  of the policy.
                                type: [number, 'null']
                              totalCashValue:
                                description: The total cash value of the policy.
                                type: [number, 'null']
                              premiumDepositFund:
                                description: unknown
                                type: [number, 'null']
                          Email:
                            description: Email model
                            required: [emailAddress, emailAddressType]
                            properties:
                              emailAddress:
                                type: [string]
                              emailAddressType:
                                description: Exceed email code values
                                type: [string]
                                enum: [CON, INC, INO, OAM, OAS, OTH]
                          FleetDriver:
                            description: '(Commerical) An instance of a fleet driver.

                              '
                            required: [name, licenseNumber, isCommercialLicense, dateOfBirth,
                              licenseState, licenseDate, yearOfHire]
                            properties:
                              name: {description: The name of the fleet driver., type: string}
                              licenseNumber: {type: string}
                              isCommercialLicense: {description: 'Indicator that the
                                  driver holds an commerical endorsement for the

                                  license identified by the licenseNumber above.

                                  ', type: string}
                              dateOfBirth: {type: string, format: dateOfBirth}
                              licenseState: {description: Two letter state USPS code
                                  for the issuing state., type: string}
                              licenseDate: {description: The date of issue for the
                                  license referenced., type: string, format: date}
                              yearOfHire: {type: string}
                          InsuredItem:
                            description: "Policies (or contracts) that insure real\
                              \ property (personal or commerical vehicle, dwelling,\
                              \ etc.) against loss, damage or liability have one or\
                              \ more specific items being insured.  This model describes\
                              \ said item(s) and any specific properties of that insurance\
                              \ with regard to that item. \n"
                            required: [coverages, discounts, lossHistory, limits,
                              itemType, itemDetails]
                            properties:
                              coverages:
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Coverage'}
                              discounts:
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Discount'}
                              lossHistory:
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/LossHistory'}
                              limits:
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Limit'}
                              itemType:
                                description: 'Property itemDetails will be a defined
                                  model of type itemType.

                                  '
                                type: [string]
                                enum: [Dwelling, Other, Structure, Vehicle]
                              itemDetails: {description: 'An instance of Dwelling,
                                  Other, Structure or Vehicle.  See itemType.

                                  ', type: object}
                          Interest: {$ref: '#/paths/~1%7BpolicyId%7D~1interests/get/responses/200/schema/properties/data/items'}
                          Billing:
                            description: Billing information for a policy or contract.
                            required: [billingMode, paymentMode]
                            properties:
                              billingMode:
                                description: 'The method used to present the bill
                                  to the member

                                  '
                                x-required-in: [rural]
                                type: [string]
                                enum: [Direct, Agency, 'null']
                              paymentMode:
                                description: 'The Mode of billing/payment, i.e. Monthly,
                                  Quarterly or Annually.

                                  '
                                type: [string]
                          Location:
                            description: 'This object represents a geographical location,
                              which contains items to be insured, such as dwellings
                              and structures, which are fixed to the location, and
                              insured items (vehicles, etc.) which MAY or MAY NOT
                              be fixed to the location.

                              '
                            required: [id, address, acres, typeFarming, ownership]
                            properties:
                              id: {description: 'The sequence or unit number. This
                                  is only valid in the context of the transaction.
                                  Refer to the description property for a

                                  persistent identifier.

                                  ', type: string}
                              address: {description: The address of this location,
                                $ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Address'}
                              acres: {description: (Farm) The number of acres at this
                                  location, type: number}
                              typeFarming: {description: '(Farm and Pollution) The
                                  type of farming done at the cited location.

                                  ', type: string}
                              ownership:
                                description: '(Pollution) Indicator whether the location
                                  is Owned or Leased

                                  '
                                enum: [Leased, Owned]
                          LossHistory:
                            required: [description, date, amount]
                            properties:
                              description: {description: A description of the loss,
                                type: string}
                              date: {description: The date the loss occurred, type: string,
                                format: date}
                              amount: {description: The amount of the loss, type: number}
                          Membership:
                            description: 'A membership is a requirement for the purchase
                              of any IFB product.  It is a stand-

                              alone entity, which is billed and paid for separately
                              from any other premium.

                              '
                            properties:
                              id: {description: The member's unique membership number,
                                type: string}
                              membershipNumber: {description: The database value of
                                  the membership id, type: string}
                              paidStatus:
                                description: The member's paid status
                                enum: [Paid, Unpaid]
                              membershipType:
                                enum: [Primary, Student, Select]
                              membershipTypeCode: {type: string}
                              membershipClass:
                                description: 'voting - has a voting interest in an
                                  agricultural concern

                                  associate - ordinary non-voting membership

                                  '
                                enum: [Voting, Associate]
                              membershipClassCode: {type: string}
                              membershipCode: {description: Individual or business
                                  membership, type: string}
                              longevityDate: {description: The date the membership
                                  was purchased, type: string, format: date}
                              termEffectiveDate: {type: string, format: date}
                              termExpirationDate: {type: string, format: date}
                              paidToDate: {type: string, format: date}
                              clientCounty: {description: The county that is specifically
                                  associated with the Client and this membership.,
                                type: string}
                              clientCountyCode: {type: string}
                              clientTownship: {description: The township that is specifically
                                  associated with the Client and this membership.,
                                type: string}
                              clientTownshipCode: {type: string}
                              overrideCounty: {description: 'Use the Client''s county
                                  by default unless this value overrides

                                  ', type: string}
                              overrideCountyCode: {type: string}
                              overrideTownship: {description: 'Use the Client''s township
                                  by default unless this value overrides

                                  ', type: string}
                              overrideTownshipCode: {type: string}
                              clientId: {description: The Client id associated with
                                  the Membership, type: string}
                              doNotRenew: {description: Membership will not renew
                                  after term date, type: boolean}
                          NonForfeitureProvision:
                            description: (Life) Describes the non-forfeiture provisions
                              on a life policy
                            properties:
                              reducedPaidUpAmount: {description: unknown., type: number}
                              extendedTermInsuranceAmount: {description: unknown.,
                                type: number}
                              extendedTermInsuranceExpirationDate: {description: unknown.,
                                type: string, format: date}
                          Other:
                            description: "(Commercial; Personal) Model for InsuredItem\
                              \ type of 'Other'.  This is a catch-all\nfor items that\
                              \ are not Vehicles, Dwellings or Structures.  \n\nExample:\
                              \  'Wedding Ring'.\n"
                            required: [description, classification, detail, deductibles,
                              limits, premium]
                            properties:
                              description: {description: A description of this item
                                  type., type: string}
                              classification: {description: 'Classification of the
                                  item.  E.g. ''Camera-Non Prof'', ''Boat 2015''.',
                                type: string}
                              detail: {description: 'A detailed itemization of the
                                  item.  E.g. ''Nikon D500 Camera'', ''Bass-Pro''.',
                                type: string}
                              deductibles:
                                description: 'Pro-rated portion of the claim which
                                  is not paid by the insurer. A deductible may apply

                                  to multiple coverages.  Examples:


                                  (Home) A deductible may cover COVA, COVB, COVC,
                                  but only be represented in the

                                  response under COVA

                                  (Renters) or only under COVC

                                  '
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Deductible'}
                              limits:
                                description: "Limits of liability (on the part of\
                                  \ the insurer) and other details of the Coverage\n\
                                  in the form of a name/value pair.\n\nExample--for\
                                  \ a #.description = 'Residence', this array may\
                                  \ have an object 'Liability Limit':1000000 \n"
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Limit'}
                              premium: {type: number}
                          Payout:
                            description: 'This model is used to model the various
                              properties needed to express repetative payouts for
                              an Life/Annuities contract

                              '
                            x-used-by: [PolicyDetails-Life]
                            x-acord-agg-xref: [OLifE.Holding.Policy.Annuity.Payout]
                            required: [originatingPolicyNumber, payoutAmount, payoutMode,
                              nextPayoutDate, lastPayoutDate]
                            properties:
                              originatingPolicyNumber:
                                description: 'The policy number of contract which
                                  is the source of funding for this payout.

                                  '
                                type: [string]
                              payoutAmount:
                                description: 'The amount of the repetative payout.

                                  '
                                x-acord-xref: ['#.PayoutAmt']
                                type: [number]
                              paymentMode:
                                description: 'The mode or frequency at which the repetative
                                  payment amount (#.payoutAmount) is made.

                                  '
                                x-acord-type-code: -'OLI_LU_PAYMODE'
                                type: [string]
                              nextPayoutDate:
                                description: 'The date of the next expected payment
                                  (based on #.paymentMode and #.paymentAmount).

                                  '
                                x-acord-xref: ['#.NextPayoutDate']
                                type: [number]
                                format: date
                              lastPayoutDate:
                                description: 'The date of the last payment made on
                                  this contract.

                                  '
                                x-acord-xref: ['null']
                                type: [number]
                                format: date
                          PersonName:
                            description: 'This model contains name details for a person.  It
                              is based on the ACORD PersonName_Type (PCS)

                              and OLifE/Party/Person (LAH).

                              '
                            x-used-by: [Client]
                            x-acord-agg-ref:
                            - {'#1': 'PersonName_Type:PersonName'}
                            - {'#2': OLifE/Party/Person}
                            required: [firstName, middleName, lastName, titlePrefix,
                              nameSuffix]
                            properties:
                              firstName:
                                description: 'First (or Given) name of the person.

                                  '
                                x-acord-xref: ['#1.GivenName (PCS)', '#2.FirstName
                                    (LAH)']
                                type: [string, 'null']
                              middleName:
                                description: 'All middle names.

                                  '
                                x-acord-xref: ['#1.OtherGivenName', '#2.MiddleName']
                                type: [string, 'null']
                              lastName:
                                description: 'Last name (surname) of the person.

                                  '
                                x-acord-xref: ['#1.Surname', '#2.LastName']
                                type: [string, 'null']
                              titlePrefix:
                                description: 'Any phrase to precede the name which
                                  is not part of the actual name,

                                  such as Dr. or Mrs.

                                  '
                                x-acord-xref: ['#1.TitlePrefix', '#2.Prefix']
                                type: [string, 'null']
                              nameSuffix:
                                description: "Any phrase to succeed the name which\
                                  \ is not par tof the actual name, \nsuch as `Jr.`\
                                  \ or `III.`\n"
                                x-acord-xref: ['#1.NameSuffix', '#2.Suffix']
                                type: [string, 'null']
                          Phone:
                            description: Phone model
                            properties:
                              phoneNumber: {description: 'The phone number in the
                                  ITU-T E.164.1 Format,

                                  ', type: string, format: e.164.1}
                              phoneType:
                                description: 'These enumerations are sourced from
                                  Exceed Client

                                  '
                                enum: [Alternate, Business, Contact, Emergency, Fax,
                                  Account, Home, Vacation, Work, Cell, Pager, Relative,
                                  Toll Free, Unlisted]
                              phoneTypeCode: {type: string}
                          Policy: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items'}
                          PolicyAssociation:
                            description: 'The PolicyAssociation model is used to model
                              those entities (person or organization) which have an

                              interest in a Policy, whose data is not necessarily
                              sourced from the client recordkeeping system.


                              The exact nature of the association is given in the
                              associationType and assoicationSubType properties.

                              '
                            required: [clientId, locationId, name, address, referenceData,
                              associationType, associationTypeCode, associationSubType,
                              associationRelationship, demographics]
                            properties:
                              clientId:
                                description: 'The client id from the the client record
                                  keeping system.

                                  '
                                type: [string, 'null']
                              locationId:
                                description: 'If the interest is tied to a specific
                                  location, use this to refer to the Location.Id property.

                                  '
                                x-used-by: [Homeowners]
                                type: [string, 'null']
                              name: {type: string}
                              address: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Address'}
                              referenceData:
                                description: "Reference information for this association.\
                                  \  The data in this field could represent a loan\
                                  \ number or case\nnumber in the case of assignee\
                                  \ (Life) or PolicyInterest (farm).  It could represent\
                                  \ the percentage split \nfor a Beneficiary (Life).\n"
                                type: [string, 'null']
                              associationType:
                                description: "Description of the type of association:\
                                  \  (Life) Assignee, Beneficiary; (Farm) Policy Interests,\
                                  \ (Multiple) \nAdditional Named Insured.  Either\
                                  \ #.associationType or #.associationTypeCode must\
                                  \ be valued to describe the\nrelationship of this\
                                  \ object with the parent Policy.\n"
                                type: [string, 'null']
                              associationTypeCode:
                                description: "Descriptive code for the type of association:\
                                  \  (Life) Assignee, Beneficiary; (Farm) Policy Interests,\
                                  \ (Multiple) \nAdditional Named Insured.  Either\
                                  \ #.associationType or #.associationTypeCode must\
                                  \ be valued to describe the\nrelationship of this\
                                  \ object with the parent Policy.\n"
                                type: [string, 'null']
                              associationSubType:
                                description: 'Further describes the association to
                                  the policy.  In the case of Beneficiary (Life),
                                  describes the Beneficiary

                                  type:  Primary or Contingent.

                                  '
                                type: [string, 'null']
                              associationRelationship:
                                description: "This field is used to describe the relationship\
                                  \ of the Party in this model (PolicyAssociation)\
                                  \ to \nthe parent Policy model.\n"
                                x-used-by: [Life, Annuities]
                                type: [string, 'null']
                                example:
                                - PolicyAssociation: {'!...': null, associationType: Beneficiary,
                                    associationSubType: Primary, associationRelationship: Son,
                                    '...!': null}
                              demographics: {description: 'Information about the party
                                  associated with the policy.

                                  ', $ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Demographics'}
                          PolicyDetail-Commercial:
                            description: 'The policy details for a commercial type
                              of insurance.  Currently this covers Farm.

                              '
                            required: [detailPart, coverages, insuredItems, fleetDrivers]
                            properties:
                              detailPart:
                                description: the insurance lines for which this model
                                  applies.
                                enum: [Farm Auto, Dwelling, Farm Structure, Farm Property,
                                  Equine, Farm Liability, Inland Marine]
                              coverages:
                                description: Coverages which are attached to the entire
                                  policy
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Coverage'}
                              insuredItems:
                                description: 'If the policy covers a unit or location,
                                  details for it

                                  (plus any additional coverages) are listed as InsuredItems.

                                  '
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/InsuredItem'}
                              fleetDrivers:
                                description: "The list of Vehicle drivers which are\
                                  \ authorized to drive vehicles owned/operated/insured\
                                  \ \nby this policy.\n"
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/FleetDriver'}
                          PolicyDetail-Life:
                            description: "The Policy detail model. which is the detail\
                              \ element of an insurance policy or Annuity \ncontract.\n"
                            x-used-by: [Policy]
                            x-acord-agg-xref:
                            - {'#LAH': OLifE.Holding.Policy.Life}
                            - {'#2': OLifE.Holding.Policy.Annuity}
                            required: [detailPart, type, maturityAge, coverages, initialDepositAmount,
                              investments, dividends, faceAmount, netBaseDeathBenefit,
                              targetPremiumAmount, minimumPremiumAmount, targetPremiumAmountBase,
                              lastPremiumDate, totalPremiumsPaidAmount, discountedAdvancePremium,
                              projectedValues, nonForfeitureProvision, payout]
                            properties:
                              detailPart:
                                description: 'The insurance lines for which this model
                                  applies.

                                  '
                                enum: [Life, Annuity]
                              type: {description: The type of policy this is (i.e.
                                  TERM)., type: string}
                              maturityAge:
                                description: 'The age of the annuitant at contract
                                  maturity.

                                  '
                                type: [number, 'null']
                              coverages:
                                description: 'An array of the coverages for this policy.  There
                                  must be at least one

                                  coverage which represents the base coverage.

                                  '
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Coverage'}
                              initialDepositAmount:
                                description: 'On an Annuity, this represents the estimated
                                  or expected portion of an

                                  initial lump sum to be made to this contract.  Examples
                                  include qualified

                                  or non-qualified replacements, Mutual Funds or Certificates
                                  of Deposit.

                                  '
                                x-acord-xref: ['#2.InitDepositAmt']
                                type: [number, 'null']
                              investments:
                                description: 'The investment information which is
                                  part of this life policy or

                                  annuity contract.

                                  '
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Investment'}
                              dividends: {description: 'The dividend information for
                                  a permanent/universal life policy

                                  ', $ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Dividend'}
                              faceAmount: {description: 'The total base face amount
                                  for the policy.

                                  ', type: number}
                              netBaseDeathBenefit: {description: 'The net death benefit
                                  paid on the based coverage of a life insurance policy.

                                  ', type: number}
                              targetPremiumAmount:
                                description: 'The target premium for a Universal Life/Interest
                                  Sensitive Life Policy.

                                  '
                                type: [number, 'null']
                              minimumPremiumAmount:
                                description: 'Current No Lapse Guarantee Premium.  At
                                  IFB, this is a policy level datum.

                                  '
                                x-acord-xref: ['#LAH.Coverage.MinPremAmt']
                                type: [number, 'null']
                              targetPremiumAmountBase:
                                description: 'The target premium for all riders on
                                  a Universal Life/Interest Sensitive Life Policy.

                                  '
                                type: [number, 'null']
                              lastPremiumDate:
                                description: 'Date on which last premium payment was
                                  applied.  This is a property on OLifE.Holding.Policy.Life
                                  only.

                                  '
                                x-acord-xref: ['#LAH.LastPremDate']
                                type: [string]
                                format: date
                              totalPremiumsPaidAmount:
                                description: 'The cumulative premiums paid on the
                                  contract since inception.

                                  '
                                type: [number, 'null']
                              discountedAdvancePremium:
                                description: 'Funds, paid in advance, to cover future
                                  premium for a specific period.  They are discounted
                                  by

                                  any future earned interest income, and hence represent
                                  a discount to the future premium.  These Funds

                                  are not available for load or withdrawl.

                                  '
                                type: [number, 'null']
                              projectedValues: {description: 'The projected policy
                                  values for a given date.

                                  ', type: object, $ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/ProjectedValues'}
                              nonForfeitureProvision: {description: 'Provisions to
                                  prevent forfeiture of the policy.

                                  ', type: object, $ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/NonForfeitureProvision'}
                              payout: {description: 'When the contract is paid, the
                                  beneficiary(ies) may elect to recieve a recurring
                                  payment or payout.  this

                                  model captures that information.

                                  ', type: object, $ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Payout'}
                          PolicyDetail-Personal:
                            description: Coverages, Discounts, Premiums, etc connected
                              with an insurance line
                            required: [detailPart, coverages, deductibles, discounts,
                              premium, insuredItems]
                            properties:
                              detailPart:
                                description: The insurance lines for which this model
                                  applies
                                enum: [Auto, Homeowners, Renters, Rural]
                              coverages:
                                description: Coverages set at the insurance line level
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Coverage'}
                              deductibles:
                                description: Deductibles applied to the Coverages
                                  at the insurance line level
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Deductible'}
                              discounts:
                                description: Array of Discount
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Discount'}
                              insuredItems:
                                description: 'If the policy covers a unit or location,
                                  details for it

                                  (plus any additional coverages) are listed as InsuredItems.

                                  '
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/InsuredItem'}
                          ProjectedValues:
                            description: "Projected values for a policy or contract.\
                              \ This model should not be used to model similar values\
                              \ for investments--it is meant \nto be at the policy\
                              \ level.\n"
                            x-used-by: [PolicyDetails-Life]
                            required: [projectedValueDate, policyValue, policySurrenderValue,
                              anniversaryPolicyValue, anniversarySurrenderValue, guaranteedPolicyValue,
                              guaranteedSurrenderValue, guaranteedAnniversaryPolicyValue,
                              guaranteedAgeXAnniversaryPolicyValue, guaranteedAnniversarySurrenderValue,
                              ageX, ageXAnniversaryDate, ageXPolicyValue, dividendValue]
                            properties:
                              projectedValueDate: {description: 'The date for which
                                  the values have been provided.  If this is the current
                                  date, then

                                  #.policyValue and #.policySurrenderValue  represent
                                  the current values.

                                  ', type: string, format: date}
                              policyValue: {description: 'The projected cash value
                                  value of the policy on the #.projectedValueDate.

                                  ', type: number}
                              policySurrenderValue:
                                description: 'The projected surrender value on #.projectedValueDate.

                                  '
                                type: [number]
                              anniversaryPolicyValue: {description: 'The future value
                                  of the policy at the next policy anniversary date.

                                  ', type: number}
                              anniversarySurrenderValue:
                                description: 'The surrender value at the next policy
                                  anniversary date.

                                  '
                                type: [number]
                              guaranteedPolicyValue:
                                description: 'The contractual policy value as of the
                                  #.projectedValueDate.

                                  '
                                type: [number]
                              guaranteedSurrenderValue:
                                description: 'The contractual surnender value as of
                                  the #.projectedValueDate.

                                  '
                                type: [number]
                              guaranteedAnniversaryPolicyValue:
                                description: 'The contractual policy value as of the
                                  next policy anniversary date.

                                  '
                                type: [number]
                              guaranteedAgeXAnniversaryPolicyValue:
                                description: 'The contractual policy value, at #.AgeXAnniversaryDate

                                  '
                                type: [number]
                              guaranteedAnniversarySurrenderValue:
                                description: 'The contractual policy value as of the
                                  next policy anniversary date.

                                  '
                                type: [number]
                              AgeX:
                                description: 'An arbitrary age which is used in #.AgeXAnniversaryDate

                                  '
                                type: [number]
                                format: integer
                              AgeXAnniversaryDate: {description: 'The date basis for
                                  which other AgeX properties are based.

                                  '}
                              AgeXPolicyValue: {description: The future value of the
                                  policy on the insured's birthday for, type: number}
                              dividendValue: {description: The projected value of
                                  the accumulated dividends on the, type: number}
                          SupplementalDocument:
                            description: This model containes references to supplemental
                              documentation for a policy.
                            required: [code, description, dateReceived]
                            properties:
                              code:
                                description: 'The code assigned to the document by
                                  the record-keeping system.

                                  '
                                type: [string, 'null']
                              description:
                                type: [string, 'null']
                              dateReceived:
                                type: [number, 'null']
                                format: date
                          Vehicle:
                            description: An vehicle type of InsuredItem
                            required: [address, description, type, vin, vehicleUse,
                              valetLevel, classCode, classCodeDescription, territory,
                              ratingTier, unit, costNew, drivers]
                            properties:
                              address: {description: The address where the vehicle
                                  is garaged, $ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Address'}
                              description: {description: 'The vehicle year, make and
                                  model', type: string}
                              type: {description: 'The type of vehice, such as ''Pickup''

                                  ', type: string}
                              vin: {description: Vehicle Identification Number, type: string}
                              vehicleUse: {description: 'Example, length of commute',
                                type: string}
                              valetLevel:
                                type: [string, 'null']
                              classCode: {description: Vehicle class code, type: string}
                              classCodeDescription: {description: Vehicle class code
                                  description, type: string}
                              territory: {description: The territory code where the
                                  vehicle is garaged}
                              ratingTier: {type: number}
                              unit: {description: Sequence number of vehicle (used
                                  with multiple vehicles), type: number}
                              costNew: {description: "The MSRP or the stated value\
                                  \ of the vehicle.  \n", type: number}
                              drivers:
                                description: Array of VehicleDriver.
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/VehicleDriver'}
                          VehicleDriver:
                            description: '(Personal)  A rated or excluded driver of
                              a vehicle.

                              '
                            required: [clientId, isRated, isExcluded, relationshipToNamedInsured,
                              discounts, penalties]
                            properties:
                              clientId: {description: The id of the Client information
                                  for the driver, type: string}
                              isRated: {description: the VehicleDriver is the rated
                                  driver of the vehicle, type: boolean}
                              isExcluded: {description: the VehicleDriver is excluded
                                  from coverage, type: boolean}
                              relationshipToNamedInsured: {type: string}
                              discounts:
                                description: Discounts associated with the driver
                                type: array
                                items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Discount'}
                              penalties:
                                type: array
                                items:
                                  properties:
                                    description: {description: The accident/conviction
                                        description, type: string}
                                    date: {description: The date of the infraction,
                                      type: string, format: date}
                                    points: {description: value of penalty, type: number}
                          YesNoChoice:
                            description: 'This model is used to represent yes or no
                              choices for a business concept--for example:

                              Does this policy have a waived premium  -- no.  These
                              are usually captured as a flag with

                              a true or false state.

                              '
                            required: [choice, state]
                            x-used-by: [Coverage]
                            properties:
                              choice:
                                description: 'The business concept for which this
                                  choice applies.

                                  '
                                x-required-in: [all]
                                type: string
                              state:
                                description: 'A boolean (true/false).  True indicates
                                  that the concept represented by the choice property

                                  is selected or present.  False indicates the opposite.

                                  '
                                x-required-in: [all]
                                type: boolean
                    policyDetails: {description: 'This property contains one or more
                        PolicyDetail-XXX models, each of which contains detail information
                        for the policy.

                        There are three PolicyDetail-XXX models:

                        1.  PolicyDetail-Personal:  This is used for the Auto, Homeowners,
                        and Rural lines.

                        2.  PolicyDetail-Life:  This is used for the Life and Annuity
                        lines.

                        3.  PolciyDetail-Commercial:  This is used for Farm and Commercial
                        lines.

                        ', type: object}
                    insuranceScore:
                      description: 'The score or index used to rate the policy, such
                        as a credit score or other indicator of financial

                        health.

                        '
                      x-required-in: [Homeowners]
                      type: [string, 'null']
                    issueAge:
                      description: 'The age of the insured or annuitant at the time
                        of issue. This is a policy level property, meaning that it
                        applies to the entire policy package. This usage is more common
                        in Annuity contracts.  For a life insurance policy, it is
                        more common to specify the issue age of the insured at the
                        Coverage level.

                        '
                      x-optional-in: [Life, Annuities]
                      type: [number, 'null']
                      format: integer
                    originalInceptionDate: {description: 'The date the policy or contract
                        was first in force.

                        ', type: string, format: date}
                    termEffectiveDate: {description: 'First effective date of the
                        policy (insurance) or contract (annuity) term.

                        ', type: string, format: date}
                    termExpirationDate:
                      description: 'The date the policy or contract term expires.

                        '
                      type: [string, 'null']
                      format: date
                    cancelDate:
                      type: [string, 'null']
                      format: date
                    maturityDate:
                      description: '(Life/Annuity) The date at which the policy or
                        contract matures--premiums are no longer being collected.

                        '
                      type: [string, 'null']
                      format: date
                    policyTerm:
                      description: 'The term of the current policy, in months.

                        '
                      type: [number, 'null']
                    premium:
                      description: 'The rolled-up value of the premiums of the Insurance
                        Lines.

                        '
                      type: [number]
                    billingDetails: {description: 'Details about the billing on this
                        policy.

                        ', $ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Billing'}
                    policyAssociations:
                      description: 'A list of the parties (persons or businesses)
                        which have an association or interest in the policy, but are
                        not necessarily clients of the enterprise.

                        '
                      type: array
                      items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/PolicyAssociation'}
                    supplementalDocuments:
                      description: 'Any documents attached to the policy which are
                        required for it''s issuance.

                        '
                      type: array
                      items: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/SupplementalDocument'}
        '401': {description: Unauthorized or invalid token}
        '404': {description: Entity not found}
        '500': {description: Server error}
  /{policyId}/interests:
    get:
      summary: An array of Interest
      parameters:
      - {$ref: '#/parameters/PolicyId'}
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  description: 'An object which relates two objects via type and id.  Consider
                    two objects, such as Policy and Client.  A policy is owned by
                    a client.  In this case, the root objectType is Policy, with it''s
                    policyId. The child objectType is Client, with it''s clientId.  The
                    relationshipType is owner:  Policy --> Owner --> Client. Note
                    that codes or text may be used to represent the three parts of
                    the Interest.

                    '
                  required: [rootId, rootType, rootTypeCode, childId, childType, childTypeCode,
                    relationshipType, relationshipTypeCode, effectiveDate, expirationDate,
                    address]
                  properties:
                    rootId:
                      description: 'The id of the source object.

                        '
                      type: [string]
                    rootType:
                      description: 'The type of the root object.

                        '
                      type: [string]
                      enum: [Policy, Billing Account, Claim, Membership, Quote, Client]
                    rootTypeCode:
                      description: 'The type code of the root object.

                        '
                      type: [string, 'null']
                    childId:
                      description: 'The id of the target object

                        '
                      type: [string]
                    childType:
                      description: 'The type of the target object.

                        '
                      type: [string]
                      enum: [Policy, Billing Account, Claim, Membership, Quote, Client]
                    childTypeCode:
                      description: 'The type code of the target object.

                        '
                      type: [string, 'null']
                    relationshipType: {description: 'The relationship between the
                        root and target object.

                        ', type: string}
                    relationshipTypeCode:
                      description: 'The code for the relationship between the root
                        and target object.

                        '
                      type: [string, 'null']
                    effectiveDate: {type: string, format: date}
                    expirationDate:
                      type: [string, 'null']
                      format: date
                    address: {$ref: '#/paths/~1%7BpolicyId%7D/get/responses/200/schema/properties/data/items/properties/locations/items/definitions/Address'}
        '401': {description: Unauthorized or invalid token}
        '404': {description: Entity not found}
        '500': {description: Server error}
parameters:
  PolicyId: {name: policyId, required: true, in: path, description: policyId, type: string}
