description: |
  A top-level model which represents an insurance Policy (of various types) or an annuity Contract (fixed
  and variable).
required: 
  ['id', 'policyNumber','description','locations','policyDetails','issueAge','originalInceptionDate','termEffectiveDate',
   'termExpirationDate', 'cancelDate','maturityDate','policyTerm', 'premium', 'billingDetails','policyAssociations',
   'supplementalDocuments']
properties:
  id:
    description: |
      The policy ID is a globally unique id. This could be a GUID or a composite of system
      information and policy number but in the latter case MUST not be used to infer
      information about the policy.
    type: string
  policyNumber:
    description: The recordkeeping system Policy Number; this is NOT globally unique.
    type: ['string', 'null']
  description:
    description: Short description of the policy (eg, '2006 Harley Road King').
    type: string
  lineOfBusiness:
    description: |
      The policy package (ie, policy type). This a 'hint' with respect to the data to found in
      #.policyDetail.
    enum: ['Auto', 'Homeowners', 'Farm', 'Life', 'Commercial', 'Annuity', 'Rural']
  locations:
    description: |
      All of the locations which are associated with this policy or contract.
    type: ['array', 'null']
    items:
      $ref: ../definitions.yaml#/definitions/Location
  policyDetails:
    description:  |
      This property contains one or more PolicyDetail-XXX models, each of which contains detail information for
      the policy.

      There are three PolicyDetail-XXX models:
      1.  PolicyDetail-Personal:  This is used for the Auto, Homeowners, and Rural lines.
      2.  PolicyDetail-Life:  This is used for the Life and Annuity lines.
      3.  PolciyDetail-Commercial:  This is used for Farm and Commercial lines.
      
    type: object
  issueAge:
    description: |
      (Life/Annuity) The age of the insured or annuitant at the time of issue. This is a policy
      level property, meaning that it applies to the entire policy package. This usage is more common
      in Annuity contracts.  For a life insurance policy, it is more common to specify the issue age
      of the insured at the Coverage
      level.
    type: ['number', 'null']
    format: integer
  originalInceptionDate:
    description: The date the policy or contract was first in force.
    type: string
    format: date
  termEffectiveDate:
    description: First effective date of the policy (insurance) or contract (annuity) term.
    type: string
    format: date
  termExpirationDate:
    description: The date the policy or contract term expires.
    type: ['string', 'null']
    format: date
  cancelDate:
    type: ['string', 'null']
    format: date
  maturityDate:
    description: |
      (Life/Annuity) The date at which the policy or contract matures--premiums are no longer
      being collected.
    type: ['string', 'null']
    format: date
  policyTerm:
    description: |
      The term of the current policy, in months.
    type: ['number', 'null']
  # ICAF 780 -- deprecate
  #billingPlan:
  #  type: string
  premium:
    description: The rolled-up value of the premiums of the Insurance Lines
    type: number
  billingDetails:
    description: details about the billing on this policy.
    $ref: ../definitions.yaml#/definitions/Billing
  policyAssociations:
    description: |
      A list of the parties (persons or businesses) which have an association or interest in the policy,
      but are not necessarily clients of the enterprise.
    type: array
    items:
      $ref: ../definitions.yaml#/definitions/PolicyAssociation
#ICAF 809
#  policyInterests:
#    description: |
#      Used to add interested parties to the policy; As opposed to policyAssocitions, these parties have clientIds,
#      which can be used to get further information if needed.
#    type: array
#    items:
#      $ref: ../definitions.yaml#/definitions/Interest
#ICAF 793
  supplementalDocuments:
    description: |
      Any documents attached to the policy which are required for it's issuance.
    type: array
    items:
      $ref: ../definitions.yaml#/definitions/SupplementalDocument      